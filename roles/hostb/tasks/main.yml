      - name: upgrade all packages
        yum: name=* state=latest
        
      - copy: src=install_docker/overlay.conf
              dest=/etc/modules-load.d/overlay.conf
              
      - copy: src=install_docker/docker.repo
              dest=/etc/yum.repos.d/docker.repo 
 #     - name: Create file
 #       file: path=/tmp/yallo2 state=touch
      - name: Create directory     
        file: path=/etc/systemd/system/docker.service.d  state=directory    
        
          
      - copy: src=install_docker/override.conf
              dest=/etc/systemd/system/docker.service.d/override.conf

      - name: Install docker-engine-1.13.1
        yum: name=docker-engine-1.13.1 
        
      - name: Make sure a service is running
        systemd: state=started name=docker

      - name: enable service docker and ensure it is not masked
        systemd:
          name: docker
          enabled: yes
          masked: no

      - name: Make sure a service is stopped
        systemd: state=stopped name=firewalld
     
      - name: enable service firewalld and ensure it is not masked
        systemd:
          name: firewalld 
          enabled: no
          masked: no

      - name: Install chrony
        yum: name=chrony

      - copy: src=install_docker/chrony.conf
              dest=/etc/chrony.conf

      - name: Install tar xz unzip curl ipset
        yum: name=tar,xz,unzip,curl,ipset

      - lineinfile: dest=/etc/selinux/config
            state=present
            regexp='^(.*)SELINUX=enforcing(.*)$'
            line='\1SELINUX=permissive\2'
            backup=yes
            backrefs=yes

      - group:
            name: nogroup
            state: present
     
     - name: Reboot the server for kernel update
       shell: ( sleep 3 && /sbin/reboot & )
       async: 0
       poll: 0 

     - name: Wait for the server to reboot
       local_action: wait_for host="{{ansible_host}}" delay=15 state=started port="{{ansible_port}}" connect_timeout=10 timeout=180

#      - name: make a test of docker
#              command:  docker ps
#              register: myoutput
